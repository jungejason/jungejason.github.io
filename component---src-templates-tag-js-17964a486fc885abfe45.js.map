{"version":3,"file":"component---src-templates-tag-js-17964a486fc885abfe45.js","mappings":"+IAwBA,IArBaA,IAAe,IACtBC,GADQ,KAAEC,GAAMF,EAapB,OAPEC,EAHGC,EAGUA,EAAKC,QAAO,CAACC,EAAaC,KACrCD,EAAYE,KAAKC,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAE,QAAUJ,GAAQA,IAC3CD,EAAYE,KAAK,MACVF,IACN,IANU,OAUbG,EAAAA,cAAA,SAAGA,EAAAA,cAAA,aAAO,QACF,IACLN,GACS,C,wGCdqB,IAE/BS,EAAO,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAsCV,OAtCUC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAEXC,OAAA,WACE,MAAM,IAAEX,GAAQY,KAAKC,MAAMC,YACrBC,EAAYH,KAAKC,MAAMG,KAAKC,KAAKC,aAAaC,MAC9CC,EAAQR,KAAKC,MAAMG,KAAKK,kBAAkBC,MAEhD,OACEpB,EAAAA,cAACqB,EAAAA,EAAM,CAACC,SAAUZ,KAAKC,MAAMW,SAAUL,MAAOJ,GAC5Cb,EAAAA,cAACuB,EAAAA,EAAG,CAACN,MAAK,WAAanB,IACvBE,EAAAA,cAAA,UAAI,kBAAgBF,GACpBE,EAAAA,cAAA,cAAQA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,SAAQ,aACxBgB,EAAMM,KAAI/B,IAAe,IAAd,KAAEgC,GAAMhC,EAClB,MAAMwB,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OACE5B,EAAAA,cAAA,OAAK6B,IAAKJ,EAAKE,OAAOC,MACpB5B,EAAAA,cAAA,MACE8B,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3BhC,EAAAA,cAACC,EAAAA,KAAI,CAAC6B,MAAO,CAAEG,UAAU,QAAW/B,GAAIuB,EAAKE,OAAOC,MACjDX,IAGLjB,EAAAA,cAAA,aAAQyB,EAAKC,YAAYQ,MACzBlC,EAAAA,cAAA,WACAA,EAAAA,cAACmC,EAAAA,EAAI,CAACxC,KAAM8B,EAAKC,YAAY/B,MAAQ,KACrCK,EAAAA,cAAA,KACEoC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,WAG7C,IAKhB,EAACpC,CAAA,CAtCU,CAASH,EAAAA,WAyCtB,W","sources":["webpack://jungejason-blog/./src/components/tags.js","webpack://jungejason-blog/./src/templates/tag.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tags = ({ tags }) => {\n  let tagContent\n\n  if (!tags) {\n    tagContent = \"None\"\n  } else {\n    tagContent = tags.reduce((accumulator, tag) => {\n      accumulator.push(<Link to={`/tag/${tag}`}>{tag}</Link>)\n      accumulator.push(', ')\n      return accumulator\n    }, [])\n  }\n\n  return (\n    <i><small>\n      tags:{' '}\n      {tagContent}\n    </small></i>\n  )\n}\n\nexport default Tags","import { Link, graphql } from \"gatsby\"\nimport React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Tags from \"../components/tags\"\n\nclass TagPage extends React.Component {\n\n  render() {\n    const { tag } = this.props.pageContext\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={`Tag for ${tag}`} />\n        <h1>Posts for tag #{tag}</h1>\n        <strong><Link to=\"/tags\">All Tags</Link></strong>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <br/>\n              <Tags tags={node.frontmatter.tags || []} />\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default TagPage\n\nexport const pageQuery = graphql`\n  query BlogPostsByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: {\n      fields: [frontmatter___date], order: DESC },\n      filter: {frontmatter: {tags: {in: [$tag]}, enabled: {eq: \"yes\"}}}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","tagContent","tags","reduce","accumulator","tag","push","React","Link","to","TagPage","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","props","pageContext","siteTitle","data","site","siteMetadata","title","posts","allMarkdownRemark","edges","Layout","location","SEO","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","date","Tags","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}