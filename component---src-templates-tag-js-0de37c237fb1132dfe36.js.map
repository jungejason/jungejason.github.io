{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/tags.js"],"names":["TagPage","render","tag","this","props","pageContext","siteTitle","data","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","to","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","date","tags","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","Tags","tagContent","reduce","accumulator","push"],"mappings":"8OAQMA,E,kGAEJC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,KAAKC,aAAaC,MAC9CC,EAAQR,KAAKC,MAAMG,KAAKK,kBAAkBC,MAEhD,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOJ,GAC5C,kBAAC,IAAD,CAAKI,MAAK,WAAaR,IACvB,8CAAoBA,GACpB,gCAAQ,kBAAC,OAAD,CAAMa,GAAG,SAAT,aACPJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWV,GAAIE,EAAKE,OAAOC,MACjDV,IAGL,+BAAQO,EAAKC,YAAYQ,MACzB,6BACA,kBAAC,IAAD,CAAMC,KAAMV,EAAKC,YAAYS,MAAQ,KACrC,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,iB,GA9BzCC,IAAMC,WAyCbjC,YAER,IAAMkC,EAAS,c,mFC3BPC,IArBF,SAAC,GAAc,IACtBC,EADUT,EAAW,EAAXA,KAad,OAPES,EAHGT,EAGUA,EAAKU,QAAO,SAACC,EAAapC,GAGrC,OAFAoC,EAAYC,KAAK,kBAAC,OAAD,CAAMxB,GAAE,QAAUb,GAAQA,IAC3CoC,EAAYC,KAAK,MACVD,IACN,IANU,OAUb,2BAAG,uCACK,IACLF","file":"component---src-templates-tag-js-0de37c237fb1132dfe36.js","sourcesContent":["import { Link, graphql } from \"gatsby\"\nimport React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Tags from \"../components/tags\"\n\nclass TagPage extends React.Component {\n\n  render() {\n    const { tag } = this.props.pageContext\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={`Tag for ${tag}`} />\n        <h1>Posts for tag #{tag}</h1>\n        <strong><Link to=\"/tags\">All Tags</Link></strong>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <br/>\n              <Tags tags={node.frontmatter.tags || []} />\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default TagPage\n\nexport const pageQuery = graphql`\n  query BlogPostsByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: {\n      fields: [frontmatter___date], order: DESC },\n      filter: {frontmatter: {tags: {in: [$tag]}, enabled: {eq: \"yes\"}}}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tags = ({ tags }) => {\n  let tagContent\n\n  if (!tags) {\n    tagContent = \"None\"\n  } else {\n    tagContent = tags.reduce((accumulator, tag) => {\n      accumulator.push(<Link to={`/tag/${tag}`}>{tag}</Link>)\n      accumulator.push(', ')\n      return accumulator\n    }, [])\n  }\n\n  return (\n    <i><small>\n      tags:{' '}\n      {tagContent}\n    </small></i>\n  )\n}\n\nexport default Tags"],"sourceRoot":""}