{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-bisect-run/","webpackCompilationHash":"a4fb9502b8f4f7c4e3dc","result":{"data":{"site":{"siteMetadata":{"title":"Jason's Blog","author":"Jason Ge 葛俊"}},"markdownRemark":{"id":"3d155b68-982a-52f6-b0a2-582ab376f431","excerpt":"自动化寻找问题commit的利器: git bisect run 线性的代码提交历史，能给自动化定位问题带来很大帮助，使得我们可以从当前有问题的提交回溯，找到历史上第一个有问题的提交。更棒的是，我们还可以使用折半查找的办法，用O(LogN)的时间找到那个有问题的提交。 比如，在一个代码仓中，有C101 ~C20…","html":"<h1>自动化寻找问题commit的利器: git bisect run</h1>\n<p>线性的代码提交历史，能给自动化定位问题带来很大帮助，使得我们可以从当前有问题的提交回溯，找到历史上第一个有问题的提交。更棒的是，我们还可以使用折半查找的办法，用O(LogN)的时间找到那个有问题的提交。</p>\n<p>比如，在一个代码仓中，有C101 ~C200 的线性提交历史。我们知道一个测试在C101处通过测试，但是在C200处失败。我们可以依次checkout C101、C102，直到C200，每次checkout之后运行测试，从而能找到第一个让测试失败的提交。</p>\n<p>另外，<code class=\"language-text\">git</code> 提供了一个工具，<code class=\"language-text\">git bisect</code>，帮助我们使用折半查找。如果我们有自动化的测试脚本，还可以使用<code class=\"language-text\">git bisect run</code>来进一步自动化。我创建了一个<a href=\"https://github.com/jungejason/git-bisect-run-demo\">用来演示的repo</a>。下面是一个运行的输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">git</span> bisect start\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> bisect bad HEAD\n\n<span class=\"token comment\"># find the commit id for C101</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> log --grep<span class=\"token operator\">=</span><span class=\"token string\">'C101'</span> --oneline <span class=\"token operator\">|</span> <span class=\"token function\">cat</span>\n37f5823 C101 - change another number\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> bisect good 37f5823\nBisecting: <span class=\"token number\">49</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">6</span> steps<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>086697d6e7359d9e8d5478a760e07cd295ffc30b<span class=\"token punctuation\">]</span> C150 - some change\n\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> bisect run <span class=\"token function\">bash</span> test.sh\nrunning <span class=\"token function\">bash</span> test.sh\nTest Passed\nBisecting: <span class=\"token number\">24</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">5</span> steps<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>35d8ef662b82d3d9ece4d78cb07e996182671417<span class=\"token punctuation\">]</span> C175 - some change\nrunning <span class=\"token function\">bash</span> test.sh\nTest Passed\nBisecting: <span class=\"token number\">12</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">4</span> steps<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>69bd28f607c733f0da71a8d30e99ff1be9f6baca<span class=\"token punctuation\">]</span> C187 - some change\nrunning <span class=\"token function\">bash</span> test.sh\nTest Failed\nBisecting: <span class=\"token number\">5</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">3</span> steps<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>94a263f8e014c54fa4715be10fb09864fb15923e<span class=\"token punctuation\">]</span> C181 - some change\nrunning <span class=\"token function\">bash</span> test.sh\nTest Failed\nBisecting: <span class=\"token number\">2</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">2</span> steps<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>fe6062f2e90be523a920796aa0cb08ea8e2a8f8e<span class=\"token punctuation\">]</span> C178 - some change\nrunning <span class=\"token function\">bash</span> test.sh\nTest Passed\nBisecting: <span class=\"token number\">0</span> revisions left to <span class=\"token builtin class-name\">test</span> after this <span class=\"token punctuation\">(</span>roughly <span class=\"token number\">1</span> step<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>20d83815050683e8d04eba6dbab60ce0b3b57b59<span class=\"token punctuation\">]</span> C180 - some change\nrunning <span class=\"token function\">bash</span> test.sh\nTest Passed\n94a263f8e014c54fa4715be10fb09864fb15923e is the first bad commit   <span class=\"token comment\"># &lt;-- result found</span>\ncommit 94a263f8e014c54fa4715be10fb09864fb15923e\nAuthor: Jason Ge <span class=\"token operator\">&lt;</span>gejun_1978@yahoo.comgc\nDate:   Tue Oct <span class=\"token number\">1</span> <span class=\"token number\">16</span>:50:32 <span class=\"token number\">2019</span> +0800\n\n    C181 - some change\n\n    Summary: <span class=\"token function\">add</span> one line\n\n    Test: none\n\n:100644 <span class=\"token number\">100644</span> a413ec3d7ad61d11032ea57df7859028c8504c65 0240cded988f3be236923bf104fced2f1143b53b M\tinventory.csv\nbisect run success\n\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> bisect reset\nPrevious HEAD position was 20d8381 C180 - some change\nSwitched to branch <span class=\"token string\">'master'</span>\nYour branch is ahead of <span class=\"token string\">'origin/master'</span> by <span class=\"token number\">104</span> commits.\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git push\"</span> to publish your <span class=\"token builtin class-name\">local</span> commits<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>可以看到，<code class=\"language-text\">git bisect run</code>自动查找到C181是第一个问题提交：</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">94a263f8e014c54fa4715be10fb09864fb15923e is the first bad commit   <span class=\"token comment\"># &lt;-- result found</span>\ncommit 94a263f8e014c54fa4715be10fb09864fb15923e\nAuthor: Jason Ge <span class=\"token operator\">&lt;</span>gejun_1978@yahoo.comgc\nDate:   Tue Oct <span class=\"token number\">1</span> <span class=\"token number\">16</span>:50:32 <span class=\"token number\">2019</span> +0800\n\n    C181 - some change\n\n    Summary: <span class=\"token function\">add</span> one line\n\n    Test: none\n\n:100644 <span class=\"token number\">100644</span> a413ec3d7ad61d11032ea57df7859028c8504c65 0240cded988f3be236923bf104fced2f1143b53b M\tinventory.csv\nbisect run success</code></pre></div>","frontmatter":{"title":"Git Bisect Run","date":"October 01, 2019","description":"Describe how git bisect run works"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/git-bisect-run/","previous":{"fields":{"slug":"/vim-commands/"},"frontmatter":{"title":"VIM Commands"}},"next":null}}}